<languages>
    <language name="abb">
        <source href="https://en.wikipedia.org/wiki/RAPID">
            The grammar of the industrial robots of ABB.
            This grammar has been reverse engineered based on a set of ABB Rapid sys-files and the existing kuka-krl
            antlr file '../kuka/krl.g4'
        </source>
    </language>
    <language name="abnf">
        <source href="https://en.wikipedia.org/wiki/Augmented_Backus%E2%80%93Naur_form">
            Augmented Backus–Naur form (ABNF) is a metalanguage based on Backus–Naur form (BNF),
            but consisting of its own syntax and derivation rules.
        </source>
    </language>
    <language name="acme">
        <source href="https://www.cs.cmu.edu/~acme/index.html">
            Acme is a simple, generic software architecture description language (ADL) that can be used as a common
            interchange format for architecture design tools and/or as a foundation for developing new architectural
            design and analysis tools.
            This site provides an introduction to Acme along with a collection of useful Acme software and technical
            information.
        </source>
    </language>
    <language name="action">
        <source href="https://en.wikipedia.org/wiki/Action!_(programming_language)#">
            Action! is a procedural programming language and integrated development environment written by Clinton Parker
            for the Atari 8-bit computers.
        </source>
    </language>
    <language name="ada">
        <source href="https://en.wikipedia.org/wiki/Ada_(programming_language)">
            Ada is a structured, statically typed, imperative, and object-oriented high-level programming language, inspired by Pascal and other languages.
        </source>
        <language name="ada2005">
            <source href="https://www.adaic.org/resources/add_content/standards/05rm/html/RM-TOC.html">
                Ada 2005 Grammar.
            </source>
        </language>
        <language name="ada2012">
            <source href="http://www.ada-auth.org/standards/12rm/html/RM-TOC.html">
                Ada 2012 Grammar.
            </source>
        </language>
        <language name="ada95">
            <source href="https://www.adahome.com/rm95/">
                Ada 1995 Grammar.
            </source>
        </language>
        <language name="ada83">
            <source href="http://archive.adaic.com/standards/83lrm/html/ada_lrm.html#Top">
                Ada 1983 Grammar.
            </source>
        </language>
    </language>
    <language name="agc" href="https://www.ibiblio.org/apollo/#gsc.tab=0">
        <source href="https://github.com/antlr/grammars-v4/tree/master/agc">
            An ANTLR4 grammar for AGC (Apollo Guidance Computer) files. The grammar was tested on Apollo4
            Solarium055 files, pulled from https://github.com/avtobiff/virtualagc.
        </source>
    </language>
    <language name="alef">
        <source href="https://en.wikipedia.org/wiki/Alef_(programming_language)">
            Alef is a discontinued concurrent programming language, designed as part of the Plan 9 operating system by
            Phil Winterbottom of Bell Labs.
            It implemented the channel-based concurrency model of Newsqueak in a compiled, C-like language.
        </source>
    </language>
    <language name="algol60">
        <source href="https://en.wikipedia.org/wiki/ALGOL_60">
            ALGOL 60 (short for Algorithmic Language 1960) is a member of the ALGOL family of computer programming
            languages.
        </source>
    </language>
    <language name="alloy">
        <source href=" https://alloytools.org/">
            Alloy is an open source language and analyzer for software modeling.
        </source>
    </language>
    <language name="alpaca">
        <source href="https://catseye.tc/article/Languages.md#alpaca">
            ALPACA is a meta-language for describing cellular automata.
        </source>
    </language>
    <language name="amazon-states-language-intrinsic-functions">
        <source href="https://states-language.net/spec.html">
            A State Machine is represented by a JSON Object.
        </source>
    </language>
    <language name="amazon-states-language">
        <source href="https://states-language.net/spec.html">
            A State Machine is represented by a JSON Object.
        </source>
    </language>
    <language name="angelscript">
        <source href="https://angelcode.com/angelscript/sdk/docs/manual/doc_script_bnf.html">
            AngelScript is structured around an engine where the application should register the functions, properties,
            and even types, that the scripts will be able to use. The scripts are then compiled into modules, where the
            application may have one or more modules, depending on the need of the application. The application can also
            expose a different interface to each module through the use of access profiles.
            This is especially useful when the application works with multiple types of scripts, e.g. GUI, AI control,
            etc.
        </source>
    </language>
    <language name="antlr">
        <source href="https://www.antlr.org/">
            From a grammar, ANTLR generates a parser that can build and walk parse trees.
        </source>
    </language>
    <language name="apex">
        <source href="https://mohan-chinnappan-n5.github.io/sfbooks/sfdevnotes/language-design/apex.html">
            Apex is a strongly typed, object-oriented programming language that allows developers to execute flow and
            transaction control statements on Salesforce servers in conjunction with calls to the API.
        </source>
    </language>
    <language name="apt">
        <source href="https://en.wikipedia.org/wiki/APT_(programming_language)#:~:text=APT%20(Automatically%20Programmed%20Tool)%20is,Douglas%20T.">
            APT (Automatically Programmed Tool)[1] is a high-level computer programming language most
            commonly used to generate instructions for numerically controlled machine tools.
        </source>
    </language>
    <language name="aql">
        <source href="https://www.arangodb.com/docs/stable/aql/index.html">
            The ArangoDB Query Language (AQL) lets you store, retrieve,
            and modify data in various ways in ArangoDB.
        </source>
    </language>
    <language name="arden">
        <source href="https://www.hl7.org/implement/standards/product_brief.cfm?product_id=372">
            The Arden Syntax for Medical Logic Systems Version 2.10 is the latest version of a formalism for clinical
            knowledge representation
            that can be used by clinicians, knowledge engineers, administrators and others to implement clinical
            decision support (CDS) solutions to help improve the quality and safety of care.
        </source>
    </language>
    <language name="argus">
        <source href="https://en.wikipedia.org/wiki/Argus_(programming_language)">
            Argus is an experimental language/system designed
            to support the construction and execution of distributed programs.
        </source>
    </language>
    <language name="arithmetic">
        <source href="https://github.com/antlr/grammars-v4/tree/master/arithmetic">
            This grammar supports the basic addition, subtraction, multiplication, division and exponent operations.
            Floating point numbers using scientific notation are supported as well as variable names consisting of
            letters.
        </source>
    </language>
    <language name="asl">
        <source href="https://github.com/antlr/grammars-v4/blob/master/asl/readme.md">
            The Action Specification Language (ASL) was originally specified by Kennedy Carter for use as an action
            language in state models in the Shlaer-Mellor methodology.
        </source>
    </language>
    <language name="asm">
        <source href="https://en.wikipedia.org/wiki/Assembly_language">
            low-level programming language with a very strong correspondence
            between the instructions in the language and the architecture's machine code instructions.
        </source>
        <language name="asm6502">
            <source href="https://en.wikipedia.org/wiki/MOS_Technology_6502">
                6502 Assember.
            </source>
        </language>
        <language name="asm8080">
            <source href="https://en.wikipedia.org/wiki/Intel_8080">
                8080 Assembler.
            </source>
        </language>
        <language name="asm8086">
            <source href="https://en.wikipedia.org/wiki/Intel_8086">
                8086 Assembler.
            </source>
        </language>
        <language name="asmMASM">
            <source href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">
                Microsoft Macro Assembler (MASM) is an x86 assembler.
            </source>
        </language>
        <language name="asmRISCV">
            <source href="">
                RISCV Assembler.
            </source>
        </language>
        <language name="asmZ80">
            <source href="https://en.wikipedia.org/wiki/Zilog_Z80">
                Z80 Assembler.
            </source>
        </language>
        <language name="masm">
            <source>
                MASM Assembler.
            </source>
        </language>
        <language name="nasm">
            <source>
                NASM Assembler.
            </source>
        </language>
        <language name="pdp7">
            <source href="https://en.wikipedia.org/wiki/PDP-7">
                PDP7 Assembler.
            </source>
        </language>
        <language name="ptx">
            <source>
                CUDA PTX-ISA Assembler.
            </source>
        </language>
    </language>
    <language name="asn">
        <source href="https://en.wikipedia.org/wiki/ASN.1#:~:text=Abstract%20Syntax%20Notation%20One%20(ASN,networking%2C%20and%20especially%20in%20cryptography.">
            Abstract Syntax Notation One (ASN. 1) is a standard interface description language (IDL) for defining data
            structures that can be serialized and deserialized in a cross-platform way.
        </source>
    </language>
    <language name="aspectj">
        <source href="https://eclipse.dev/aspectj/">
            a seamless aspect-oriented extension to the Java programming language.
        </source>
    </language>
    <language name="aterm">
        <source href="https://homepages.cwi.nl/~daybuild/daily-books/technology/aterm-guide/aterm-guide.html#section.aterm-introduction">
            Annotated Terms (ATerms) provide a solution for implementation needs in the areas of compilers, interactive
            programming environments and distributed applications but are more widely applicable in areas like model
            checking and ontology definition.
        </source>
    </language>
    <language name="atl">
        <source href="https://eclipse.dev/atl/">
            ATL (ATL Transformation Language) is a model transformation language and toolkit.
        </source>
    </language>
    <language name="awk">
        <source href="https://en.wikipedia.org/wiki/AWK">
            Domain-specific language designed
            for text processing and typically used as a data extraction and reporting tool.
        </source>
    </language>
    <language name="b">
        <source href="https://en.wikipedia.org/wiki/B_(programming_language)">
            B is a programming language developed at Bell Labs circa 1969 by Ken Thompson and Dennis Ritchie
        </source>
    </language>
    <language name="basic">
        <source href="https://en.wikipedia.org/wiki/Integer_BASIC">
            Integer BASIC is a BASIC interpreter written by Steve Wozniak for the Apple I and Apple II computers.
        </source>
    </language>
    <language name="bcl">
        <source href="https://en.wikipedia.org/wiki/Binary_combinatory_logic">
            Binary combinatory logic (BCL) is a computer programming language that uses binary terms 0 and 1 to create a
            complete formulation of combinatory logic using only the symbols 0 and 1.
            Using the S and K combinators, complex boolean algebra functions can be made.
        </source>
    </language>
    <language name="bcpl">
        <source href="https://en.wikipedia.org/wiki/BCPL">
            BCPL ("Basic Combined Programming Language") is a procedural, imperative, and structured programming
            language.
            Originally intended for writing compilers for other languages, BCPL is no longer in common use.
        </source>
    </language>
    <language name="bdf">
        <source href="https://en.wikipedia.org/wiki/Glyph_Bitmap_Distribution_Format">
            The Glyph Bitmap Distribution Format (BDF) by Adobe is a file format for storing bitmap fonts.
        </source>
    </language>
    <language name="bencoding">
        <source href="https://en.wikipedia.org/wiki/Bencode">
            Bencode (pronounced like Bee-encode) is the encoding used by the peer-to-peer file sharing system BitTorrent
            for storing and transmitting loosely structured data.
        </source>
    </language>
    <language name="bibcode">
        <source href="https://en.wikipedia.org/wiki/Bibcode">
            The bibcode (also known as the refcode) is a compact identifier used by several astronomical data systems to
            uniquely specify literature references.
        </source>
    </language>
    <language name="bibtex">
        <source href="https://en.wikipedia.org/wiki/BibTeX">
            BibTeX is both a bibliographic flat-file database file format and a software program for processing these
            files to produce lists of references (citations).
            The BibTeX file format is a widely used standard with broad support by reference management software.
        </source>
    </language>
    <language name="bicep">
        <source href="https://belux.micropole.com/en/blog/blog-azure-infrastructure-as-code-iac-with-bicep/">
            Microsoft has released "Bicep," a domain-specific language (DSL) that uses declarative syntax to deploy
            Azure resources. In a Bicep file, you define the infrastructure you want to deploy to Azure,
            then use that file throughout the development lifecycle to deploy your infrastructure repeatedly.
        </source>
    </language>
    <language name="bison">
        <source href="https://en.wikipedia.org/wiki/Yacc">
            Bison/Yacc (Yet Another Compiler-Compiler)
            is a computer program for the Unix operating system developed by Stephen C. Johnson.
        </source>
    </language>
    <language name="bnf">
        <source href="https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form">
            In computer science, Backus–Naur form (/ˌbækəs ˈnaʊər/) (BNF or Backus normal form)
            is a notation used to describe the syntax of programming languages or other formal languages.
        </source>
    </language>
    <language name="c">
        <source href="https://en.wikipedia.org/wiki/C_(programming_language)">
            C is a general-purpose programming language.
            It was created in the 1970s by Dennis Ritchie and remains very widely used and influential.
        </source>
    </language>
    <language name="calculator">
        <source href="https://github.com/antlr/grammars-v4/tree/master/calculator#readme">
            A simple ANTLR4 calculator grammar based on the khubla.com arithmetic grammar.
        </source>
    </language>
    <language name="callable">
        <source href="https://esolangs.org/wiki/Callable">
            Callable is an esoteric programming language.
        </source>
    </language>
    <language name="capnproto">
        <source href="https://en.wikipedia.org/wiki/Cap%27n_Proto">
            Cap’n Proto is a data serialization format and Remote Procedure Call (RPC) framework for exchanging data
            between computer programs.
        </source>
    </language>
    <language name="caql">
        <source href="https://docs.circonus.com/caql/reference/">
            CAQL is a stream processing language that allows the user to create complex transformations of metric data.
        </source>
    </language>
    <language name="cayenne">
        <source href="https://link.springer.com/chapter/10.1007/10704973_6">
            Cayenne is a Haskell-like language.
            The main difference between Haskell and Cayenne is that Cayenne has dependent types.
        </source>
    </language>
    <language name="chip8">
        <source href="http://devernay.free.fr/hacks/chip8/C8TECH10.HTM">
            Chip-8 is a simple, interpreted, programming language which was first used on some do-it-yourself computer
            systems in the late 1970s and early 1980s.
            The COSMAC VIP, DREAM 6800, and ETI 660 computers are a few examples.
        </source>
    </language>
    <language name="clf">
        <source href="https://en.wikipedia.org/wiki/Common_Log_Format">
            For computer log management, the Common Log Format, also known as the NCSA Common log format.
        </source>
    </language>
    <language name="clif">
        <source href="https://en.wikipedia.org/wiki/Common_Logic">
            The CL Standard includes specifications for three dialects, the Common Logic Interchange Format (CLIF)
            (Annex A), the Conceptual Graph Interchange Format (CGIF) (Annex B), and an XML-based notation for Common
            Logic (XCL) (Annex C). The semantics of these dialects are defined in the Standard by their translation to
            the abstract syntax and semantics of Common Logic. Many other logic-based languages could also be defined as
            subsets of CL by means of similar translations; among them are the RDF and OWL languages, which have been
            defined by the W3C.
        </source>
    </language>
    <language name="clojure">
        <source href="https://en.wikipedia.org/wiki/Clojure">
            Clojure is a dynamic and functional dialect of the Lisp programming language on the Java platform.
        </source>
    </language>
    <language name="clu">
        <source href="https://en.wikipedia.org/wiki/CLU_(programming_language)">
            CLU is a programming language created at the Massachusetts Institute of Technology (MIT) by Barbara Liskov
            and her students starting in 1973.[8] While it did not find extensive use, it introduced many features that
            are used widely now,
            and is seen as a step in the development of object-oriented programming (OOP).
        </source>
    </language>
    <language name="cmake">
        <source href="https://en.wikipedia.org/wiki/CMake">
            CMake is cross-platform free and open-source software for build automation, testing,
            packaging and installation of software by using a compiler-independent method.
        </source>
    </language>
    <language name="cobol85">
        <source href="https://en.wikipedia.org/wiki/COBOL#COBOL-85">
            COBOL (an acronym for "common business-oriented language")
            is a compiled English-like computer programming language designed for business use.
        </source>
    </language>
    <language name="codeql">
        <source href="https://en.wikipedia.org/wiki/Semmle">
            The LGTM platform leverages the CodeQL query engine (formerly QL)[3] to perform semantic analysis on
            software code bases.
        </source>
    </language>
    <language name="cookie">
        <source href="https://datatracker.ietf.org/doc/html/rfc6265#section-5.2">
            A user agent MUST use an algorithm equivalent to the following
            algorithm to parse a "set-cookie-string".
        </source>
    </language>
    <language name="cpp">
        <source href="https://en.wikipedia.org/wiki/C%2B%2B14">
            C++14 is a version of the ISO/IEC 14882 standard for the C++ programming language.
        </source>
    </language>
    <language name="cql">
        <source href="https://en.wikipedia.org/wiki/Contextual_Query_Language">
            Contextual Query Language (CQL), previously known as Common Query Language, is a formal language for
            representing queries to information retrieval systems such as search engines,
            bibliographic catalogs and museum collection information.
        </source>
    </language>
    <language name="cql3">
        <source href="https://cassandra.apache.org/doc/stable/cassandra/cql/">
            CQL offers a model similar to SQL. The data is stored in tables containing rows of columns. For that reason,
            when used in this document,
            these terms (tables, rows and columns) have the same definition that they have in SQL.
        </source>
    </language>
    <language name="creole">
        <source href="https://en.wikipedia.org/wiki/Creole_(markup)">
            Creole is a lightweight markup language, aimed at being a common markup language for wikis,
            enabling and simplifying the transfer of content between different wiki engines.
        </source>
    </language>
    <language name="csharp">
        <source href="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)">
            C# is a general-purpose high-level programming language supporting multiple paradigms.
            C# encompasses static typing, strong typing, lexically scoped, imperative,
            declarative, functional, generic, bject-oriented (class-based), and component-oriented programming
            disciplines.
        </source>
    </language>
    <language name="css3">
        <source href="https://en.wikipedia.org/wiki/CSS#CSS_3">
            Cascading Style Sheets (CSS) is a style sheet language used for specifying
            the presentation and styling of a document written in a markup language such as HTML or XML.
        </source>
    </language>
    <language name="csv">
        <source href="https://en.wikipedia.org/wiki/Comma-separated_values">
            Comma-separated values (CSV) is a text file format that uses
            commas to separate values, and newlines to separate records.
        </source>
    </language>
    <language name="ctl">
        <source href="https://en.wikipedia.org/wiki/Computation_tree_logic">
            Computation tree logic (CTL) is a branching-time logic, meaning that its model of
            time is a tree-like structure in which the future is not determined.
        </source>
    </language>
    <language name="cto">
        <source href="https://hyperledger.github.io/composer/v0.19/reference/cto_language.html">
            Hyperledger Composer includes an object-oriented modeling language
            that is used to define the domain model for a business network definition.
        </source>
    </language>
    <language name="cypher">
        <source href="https://en.wikipedia.org/wiki/Cypher_(query_language)">
            Cypher is a declarative graph query language
            that allows for expressive and efficient data querying in a property graph.
        </source>
    </language>
    <language name="dart2">
        <source href="https://en.wikipedia.org/wiki/Dart_(programming_language)">
            Dart is an object-oriented, class-based, garbage-collected language with C-style syntax.
            It can compile to machine code, JavaScript, or WebAssembly.
        </source>
    </language>
    <language name="databank">
        <source href="https://en.wikipedia.org/wiki/Databank_format">
            The databank format is an ASCII file format for time series econometric analysis.
        </source>
    </language>
    <language name="datalog">
        <source href="https://en.wikipedia.org/wiki/Datalog">
            Datalog is a declarative logic programming language. While it is syntactically a subset of Prolog,
            Datalog generally uses a bottom-up rather than top-down evaluation model.
        </source>
    </language>
    <language name="dcm">
        <source href="https://www.etas.com/download-center-files/products_ASCET_Software_Products/TechNote_DCM_File_Formats.pdf">
            DCM file formats supported by ASCET and INCA.
        </source>
    </language>
    <language name="dice">
        <source href="https://github.com/Bernardo-MG/dice-notation-java/">
            Created on the late 70s for Dungeons &amp; Dragons, the dice notation has become a
            standard on tabletop games as it allows generating random values in concrete distributions with the help of
            simple formulas such as '2d6+5',
            which means "roll two dice, add their values and then add the number five to the result".
        </source>
    </language>
    <language name="dif">
        <source href="https://en.wikipedia.org/wiki/Data_Interchange_Format">
            Data Interchange Format (.dif) is a text file format used to import/export single spreadsheets between
            spreadsheet programs.
        </source>
    </language>
    <language name="doiurl">
        <source href="https://datatracker.ietf.org/doc/id/draft-paskin-doi-uri-04.txt">
            URI Scheme for the Digital Object Identifier (DOI)
        </source>
    </language>
    <language name="dot">
        <source href="https://en.wikipedia.org/wiki/DOT_(graph_description_language)">
            DOT is a graph description language, developed as a part of the Graphviz project.
        </source>
    </language>
    <language name="drools-lsp">
        <source href="https://en.wikipedia.org/wiki/Drools">
            Drools is a business rule management system (BRMS) with a forward and backward chaining inference-based rules engine,
            more correctly known as a production rule system, using an enhanced implementation of the Rete algorithm.
        </source>
    </language>
    <language name="ebnf">
        <source href="https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form">
            Extended Backus–Naur form (EBNF) is a family of metasyntax notations, any of which can be used to express a
            context-free grammar.
        </source>
    </language>
    <language name="edif300">
        <source href="https://www.elgris.com/content/edif_overview.html">
            EDIF (Electronic Design Interchange Format).
        </source>
    </language>
    <language name="edn">
        <source href="https://en.wikipedia.org/wiki/Clojure#Extensible_Data_Notation">Extensible Data Notation, or edn,
            is a subset of the Clojure language intended as a data transfer format.
            It can be used to serialize and deserialize Clojure data structures, and Clojure itself uses a superset of
            edn to represent programs.
        </source>
    </language>
    <language name="eiffel">
        <source href="https://en.wikipedia.org/wiki/Eiffel_(programming_language)">
            Eiffel is an object-oriented programming language designed by Bertrand Meyer.
        </source>
    </language>
    <language name="elixir">
        <source href="https://en.wikipedia.org/wiki/Elixir_(programming_language)">
            Elixir is a functional, concurrent, high-level general-purpose programming language that runs on the BEAM
            virtual machine,
            which is also used to implement the Erlang programming language.
        </source>
    </language>
    <language name="erlang">
        <source href="https://en.wikipedia.org/wiki/Erlang_(programming_language)">
            Erlang is a general-purpose, concurrent,
            functional high-level programming language, and a garbage-collected runtime system.
        </source>
    </language>
    <language name="esolang">
        <source href="https://en.wikipedia.org/wiki/Esoteric_programming_language">
            An esoteric programming language (sometimes shortened to esolang)
            is a programming language designed to test the boundaries of computer programming language design, as a
            proof of concept, as software art, as a hacking interface to another language
            (particularly functional programming or procedural programming languages), or as a joke.
        </source>
        <language name="brainflak">
            <source href="https://esolangs.org/wiki/Brain-Flak">
                Brain-Flak is a stack-based esoteric language designed by Programming Puzzles and Code-Golf user,
                DJMcMayhem. The name is a cross between "brainfuck", which was a big inspiration for the language,
                and "flak-overstow", since the language is confusing and stack-based.
            </source>
        </language>
        <language name="brainfuck">
            <source href="https://en.wikipedia.org/wiki/Brainfuck">
                Designed to be extremely minimalistic, the language consists of only eight simple commands,
                a data pointer and an instruction pointer.
            </source>
        </language>
        <language name="cool">
            <source href="https://theory.stanford.edu/~aiken/software/cool/cool.html">
                Cool is a small language designed for use in an undergraduate compiler course project.
            </source>
        </language>
        <language name="dgol">
            <source href="https://esolangs.org/wiki/DGOL">
                DGOL (Directed Graph Oriented Language) is an imperative programming language
                in which all values are pointers to nodes within directed graphs.
            </source>
        </language>
        <language name="lolcode">
            <source href="https://en.wikipedia.org/wiki/LOLCODE">
                LOLCODE is an esoteric programming language inspired by lolspeak,
                the language expressed in examples of the lolcat Internet meme.
            </source>
        </language>
        <language name="loop">
            <source href="https://en.wikipedia.org/wiki/LOOP_(programming_language)">
                LOOP is a simple register language that precisely captures the primitive recursive functions.
            </source>
        </language>
        <language name="nanofuck">
            <source href="https://esolangs.org/wiki/Nanofuck">
                An NF machine is basically a Boolfuck machine. A tape model is used.
            </source>
        </language>
        <language name="sickbay">
            <source href="https://esolangs.org/wiki/SICKBAY">
                SICKBAY is an esoteric dialect of BASIC.
            </source>
        </language>
        <language name="snowball">
            <source href="http://snowball.tartarus.org/compiler/snowman.html">
                Snowball is a small string-handling language,
                and its name was chosen as a tribute to SNOBOL.
            </source>
        </language>
        <language name="wheel">
            <source href="https://esolangs.org/wiki/Wheel">
                Wheel (WHolly ElEgant Language) was created by User:PixelatedStarfish in 2021.
                The syntax of the language is designed to be terse, with single character operations.
            </source>
        </language>
    </language>
    <language name="evm-bytecode">
        <source href="https://www.ethervm.io/">
            The Ethereum VM is a stack-based, big-endian VM with a word size of 256-bits and is used to run the smart
            contracts on the Ethereum blockchain.
        </source>
    </language>
    <language name="fasta">
        <source href="https://en.wikipedia.org/wiki/FASTA_format">
            In bioinformatics and biochemistry, the FASTA format is a text-based format for
            representing either nucleotide sequences or amino acid (protein) sequences,
            in which nucleotides or amino acids are represented using single-letter codes.
        </source>
    </language>
    <language name="fdo91">
        <source href="https://mazur-archives.s3.amazonaws.com/aol-files/fdo91/tutorial_faq.html">
            FDO stands for Form Definition Operator. AOL communicates using this programming language.
        </source>
    </language>
    <language name="fen">
        <source href="https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation">
            Forsyth–Edwards Notation (FEN)
            is a standard notation for describing a particular board position of a chess game.
        </source>
    </language>
    <language name="flatbuffers">
        <source href="https://flatbuffers.dev/flatbuffers_grammar.html">
            FlatBuffers is an efficient cross platform serialization library for C++, C#, C, Go, Java, Kotlin,
            JavaScript, Lobster, Lua, TypeScript, PHP, Python, Rust and Swift.
            It was originally created at Google for game development and other performance-critical applications.
        </source>
    </language>
    <language name="flowmatic">
        <source href="https://en.wikipedia.org/wiki/FLOW-MATIC">
            FLOW-MATIC, originally known as B-0 (Business Language version 0),
            was the first English-like data processing language.
        </source>
    </language>
    <language name="focal">
        <source href="https://en.wikipedia.org/wiki/FOCAL_(programming_language)">
            FOCAL (acronym for Formulating On-line Calculations in Algebraic Language
        </source>
    </language>
    <language name="fol">
        <source href="https://en.wikipedia.org/wiki/First-order_logic">
            First-order logic—also called predicate logic, predicate calculus, quantificational logic.
        </source>
    </language>
    <language name="fortran">
        <source href="https://en.wikipedia.org/wiki/Fortran">
            Fortranis a third generation, compiled, imperative
            programming language that is especially suited to numeric computation and scientific computing.
        </source>
        <language name="fortran77">
            <source href="https://en.wikipedia.org/wiki/Fortran#FORTRAN_77">
                Fortran 77
            </source>
        </language>
        <language name="fortran90">
            <source href="https://en.wikipedia.org/wiki/Fortran#Fortran_90">
                Fortran 90
            </source>
        </language>
    </language>
    <language name="freedesktop">
        <source href="https://en.wikipedia.org/wiki/Freedesktop.org">
            project to work on interoperability and shared base technology
            for free-software desktop environments for the X Window System.
        </source>
        <language name="desktop-entry">
            <source href="https://specifications.freedesktop.org/desktop-entry-spec/latest/">
                Both the KDE and GNOME desktop environments have adopted a similar format for "desktop entries".
            </source>
        </language>
    </language>
    <language name="fusion-tables">
        <source href="https://support.google.com/fusiontables/answer/9551050">
            Google Fusion Tables and the Fusion Tables API have been discontinued.
        </source>
    </language>
    <language name="gdscript">
        <source href="https://en.wikipedia.org/wiki/Godot_(game_engine)">
            Godot has its own built-in scripting language, GDScript,[30] a high-level, gradually typed programming
            language which is syntactically similar to Python.
        </source>
    </language>
    <language name="gedcom">
        <source href="https://en.wikipedia.org/wiki/GEDCOM">
            Genealogy data exchange format.
        </source>
    </language>
    <language name="gff3">
        <source href="https://gmod.org/wiki/GFF3">
            GFF is a standard file format for storing genomic features in a text file.
            GFF stands for Generic Feature Format. GFF files are plain text, 9 column, tab-delimited files. GFF
            databases also exist. They use a schema custom built to represent GFF data.
            GFF is frequently used in GMOD for data exchange and representation of genomic data.
        </source>
    </language>
    <language name="glsl">
        <source href="https://en.wikipedia.org/wiki/OpenGL_Shading_Language">
            OpenGL Shading Language (GLSL) is a high-level shading language with a syntax based on the C programming
            language.
        </source>
    </language>
    <language name="gml">
        <source href="https://en.wikipedia.org/wiki/Graph_Modelling_Language">
            Graph Modeling Language (GML) is a hierarchical ASCII-based file format for describing graphs.
        </source>
    </language>
    <language name="golang">
        <source href="https://en.wikipedia.org/wiki/Go_(programming_language)">
            Go is a statically typed, compiled high-level programming language designed
            at Google by Robert Griesemer, Rob Pike, and Ken Thompson.
            It is syntactically similar to C.
        </source>
    </language>
    <language name="graphql">
        <source href="https://en.wikipedia.org/wiki/GraphQL">
            GraphQL is a data query and manipulation language for APIs,
            that allows a client to specify what data it needs ("declarative data fetching").
        </source>
    </language>
    <language name="graphstream-dgs">
        <source href="https://graphstream-project.org/doc/Advanced-Concepts/The-DGS-File-Format/">
            DGS is a file format allowing to store graphs and dynamic graphs
            in a textual human readable way.
        </source>
    </language>
    <language name="gtin">
        <source href="https://en.wikipedia.org/wiki/Global_Trade_Item_Number">
            The Global Trade Item Number (GTIN) is an identifier for trade items.
        </source>
    </language>
    <language name="guido">
        <source href="https://en.wikipedia.org/wiki/GUIDO_music_notation">
            GUIDO Music Notation is a computer music notation format designed to
            logically represent all aspects of music in a manner that is both computer-readable and easily readable by
            human beings.
        </source>
    </language>
    <language name="guitartab">
        <source href="https://en.wikipedia.org/wiki/Tablature">
            Guitar Tablature.
        </source>
    </language>
    <language name="gvpr">
        <source href="https://www.graphviz.org/">
            GraphViz language.
        </source>
    </language>
    <language name="haskell">
        <source href="https://en.wikipedia.org/wiki/Haskell">
            Haskell is a general-purpose, statically-typed, purely functional programming language
            with type inference and lazy evaluation.
        </source>
    </language>
    <language name="html">
        <source href="https://en.wikipedia.org/wiki/HTML">
            Hypertext Markup Language (HTML) is
            the standard markup language for documents designed to be displayed in a web browser.
        </source>
    </language>
    <language name="http">
        <source href="https://en.wikipedia.org/wiki/HTTP">
            HTTP (Hypertext Transfer Protocol) is an application layer protocol in the Internet protocol suite model
            for distributed, collaborative, hypermedia information systems.
        </source>
    </language>
    <language name="hypertalk">
        <source href="https://en.wikipedia.org/wiki/HyperTalk">
            HyperTalk is a discontinued high-level, procedural programming language created in 1987 by Dan Winkler and
            used in conjunction with Apple Computer's HyperCard hypermedia program by Bill Atkinson.
        </source>
    </language>
    <language name="icalendar">
        <source href="https://en.wikipedia.org/wiki/ICalendar">
            he Internet Calendaring and Scheduling Core Object Specification (iCalendar) is a
            media type which allows users to store and exchange calendaring and scheduling information
            such as events, to-dos, journal entries, and free/busy information, and together with its
            associated standards has been a cornerstone
            of the standardization and interoperability of digital calendars across different vendors.
        </source>
    </language>
    <language name="icon">
        <source href="https://en.wikipedia.org/wiki/Icon_(programming_language)">
            Icon is a very high-level programming language based on the concept of "goal-directed execution"
            in which code returns a "success" along with valid values, or a "failure",
            indicating that there is no valid data to return.
        </source>
    </language>
    <language name="idl">
        <source href="https://en.wikipedia.org/wiki/Interface_description_language">
            An interface description language or interface definition language (IDL) is a generic term for
            a language that lets a program
            or object written in one language communicate with another program written in an unknown language.
        </source>
    </language>
    <language name="inf">
        <source href="https://en.wikipedia.org/wiki/INF_file">
            INF file (setup Information file) is INI plain-text file used by
            Microsoft Windows-based operating systems for the installation of software and drivers.
        </source>
    </language>
    <language name="informix">
        <source href="https://en.wikipedia.org/wiki/IBM_Informix-4GL">
            It includes embedded SQL, a report writer language, a form language, and a limited set
            of imperative capabilities (functions, if and while statements, and supports arrays etc.)
            The language is particularly close to a natural language and is easy to learn and use.
        </source>
    </language>
    <language name="infosapient">
        <source href="http://info-sapient.sourceforge.net/White_Paper/BusinessProcessRules.pdf">
            Business Rule based language.
        </source>
    </language>
    <language name="iri">
        <source href="https://en.wikipedia.org/wiki/Internationalized_Resource_Identifier">
            The Internationalized Resource Identifier (IRI) is an internet protocol standard which builds
            on the Uniform Resource Identifier (URI) protocol by greatly expanding the set of permitted characters.
        </source>
    </language>
    <language name="iso8601">
        <source href="https://en.wikipedia.org/wiki/ISO_8601">
            ISO 8601 is an international standard covering the
            worldwide exchange and communication of date and time-related data.
        </source>
    </language>
    <language name="istc">
        <source href="https://en.wikipedia.org/wiki/International_Standard_Text_Code">
            The International Standard Text Code (ISTC) is a unique identifier for text-based works.
        </source>
    </language>
    <language name="itn">
        <source href="https://en.wikipedia.org/wiki/Itinerary_file">
            ITN is a file format designed as an itinerary data format for TomTom devices.
        </source>
    </language>
    <language name="jam">
        <source href="https://en.wikipedia.org/wiki/JAM_notation">
            JAM is both the software and file format for representing music as human-readable and human-writable text.
            Unlike the ABC notation, another text-based music format,
            that is best suitable for one-voice tunes, JAM is mainly focused on chords.
        </source>
    </language>
    <language name="janus">
        <source href="https://en.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)">
            Janus (time-reversible computing programming language).
        </source>
    </language>
    <language name="java">
        <source href="https://en.wikipedia.org/wiki/Java_(programming_language)">
            Java is a high-level, class-based, object-oriented programming language
            that is designed to have as few implementation dependencies as possible.
        </source>
        <language name="java">
            <source>
                Version 6.
            </source>
        </language>
        <language name="java8">
            <source>
                Version 8.
            </source>
        </language>
        <language name="java9">
            <source>
                Version 9.
            </source>
        </language>
        <language name="java20">
            <source>
                Version 20.
            </source>
        </language>
    </language>
    <language name="javadoc">
        <source href="https://github.com/antlr/grammars-v4/blob/master/javadoc/README.md">
            An ANTLR4 grammar for Javadoc.
        </source>
    </language>
    <language name="javascript">
        <language name="ecmascript">
            <source href="https://en.wikipedia.org/wiki/ECMAScript">
                ECMAScript is a standard for scripting languages,
                including JavaScript, JScript, and ActionScript.
            </source>
        </language>
        <language name="javascript">
            <source href="https://en.wikipedia.org/wiki/JavaScript">
                JavaScript, often abbreviated as JS,
                is a programming language and core technology of the Web, alongside HTML and CSS.
            </source>
        </language>
        <language name="jsx">
            <source href="https://en.wikipedia.org/wiki/JSX_(JavaScript)">
                JSX (JavaScript XML, formally JavaScript Syntax eXtension) is an XML-like extension
                to the JavaScript language syntax.
            </source>
        </language>
        <language name="typescript">
            <source href="https://en.wikipedia.org/wiki/TypeScript">
                TypeScript is a free and open-source high-level programming language developed by Microsoft
                that adds static typing with optional type annotations to JavaScript.
            </source>
        </language>
    </language>
    <language name="joss">
        <source href="https://en.wikipedia.org/wiki/JOSS">
            JOSS (acronym for JOHNNIAC Open Shop System)
            was one of the first interactive, time-sharing programming languages.
        </source>
    </language>
    <language name="jpa">
        <source href="https://en.wikipedia.org/wiki/Jakarta_Persistence">
            Jakarta Persistence, also known as JPA (abbreviated from formerly name Java Persistence API) is a Jakarta EE
            application programming interface specification
            that describes the management of relational data in enterprise Java applications.
        </source>
    </language>
    <language name="json">
        <source href="https://en.wikipedia.org/wiki/JSON">
            JSON JavaScript Object Notation.
        </source>
    </language>
    <language name="json5">
        <source href="https://en.wikipedia.org/wiki/JSON#JSON5">
            JSON5 Data Interchange Format.
        </source>
    </language>
    <language name="karel">
        <source href="https://en.wikipedia.org/wiki/Karel_(programming_language)">
            Karel is an educational programming language for beginners,
            created by Richard E. Pattis in his book Karel The Robot:
            A Gentle Introduction to the Art of Programming.
        </source>
    </language>
    <language name="kirikiri-tjs">
        <source href="https://github.com/antlr/grammars-v4/tree/master/kirikiri-tjs">
            Kirikiri TJS2 is a Javascript-like script language for Kirikiri2 game engine.
        </source>
    </language>
    <language name="kotlin">
        <source href="https://en.wikipedia.org/wiki/Kotlin_(programming_language)">
            Kotlin is a cross-platform, statically typed, general-purpose high-level programming language
            with type inference. Kotlin is designed to interoperate fully with Java
        </source>
    </language>
    <language name="kquery">
        <source href="https://klee-se.org/docs/kquery/">
            The KQuery language is the textual representation of
            constraint expressions and queries which is used as input to the Kleaver constraint solver.
        </source>
    </language>
    <language name="kuka">
        <source href="https://github.com/antlr/grammars-v4/tree/master/kuka">
            The grammar of the industrial robots of KUKA.
        </source>
    </language>
    <language name="lambda">
        <source href="https://en.wikipedia.org/wiki/Lambda_calculus">
            Lambda calculus (also written as λ-calculus) is a formal system in mathematical logic for expressing
            computation based on
            function abstraction and application using variable binding and substitution.
        </source>
    </language>
    <language name="langium">
        <source href="https://langium.org/">
            Langium is an open source language engineering tool with first-class support for the
            Language Server Protocol, written in TypeScript and running in Node.
        </source>
    </language>
    <language name="lark">
        <source href="https://lark-parser.readthedocs.io/en/stable/">
            Lark is a modern parsing library for Python. Lark can parse any context-free grammar.
        </source>
    </language>
    <language name="lcc">
        <source href="https://en.wikipedia.org/wiki/Library_of_Congress_Classification">
            Library of Congress Numbers.
        </source>
    </language>
    <language name="less">
        <source href="https://en.wikipedia.org/wiki/Less_(style_sheet_language)">
            Less (Leaner Style Sheets; sometimes stylized as LESS) is a dynamic preprocessor style sheet language
            that can be compiled into Cascading Style Sheets (CSS)
        </source>
    </language>
    <language name="limbo">
        <source href="https://www.vitanuova.com/inferno/papers/limbo.html">
            Limbo is a programming language intended for applications
            running distributed systems on small computers.
        </source>
    </language>
    <language name="lisa">
        <source href="https://en.wikipedia.org/wiki/Language_for_Instruction_Set_Architecture">
            LISA (Language for Instruction Set Architectures) is a language to describe the instruction set architecture
            of a processor. LISA captures the information required to generate software tools (compiler, assembler,
            instruction set simulator, ...)
            and implementation hardware (in VHDL or Verilog) of a given processor.
        </source>
    </language>
    <language name="lisp">
        <source href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">
            Lisp (historically LISP, an abbreviation of "list processing") is a family of programming languages with a
            long
            history and a distinctive, fully parenthesized prefix notation.
        </source>
    </language>
    <language name="llvm-ir">
        <source href="https://llvm.org/docs/LangRef.html">'
            LLVM is a Static Single Assignment (SSA) based representation that provides type safety, low-level
            operations, flexibility,
            and the capability of representing ‘all’ high-level languages cleanly.
        </source>
    </language>
    <language name="logo">
        <source href="https://en.wikipedia.org/wiki/Logo_(programming_language)">
            Logo is an educational programming language
        </source>
        <language name="logo">
            <source href="https://en.wikipedia.org/wiki/Logo_(programming_language)">
                Logo
            </source>
        </language>
        <language name="ucb-logo">
            <source href="https://en.wikipedia.org/wiki/UCBLogo">
                UCBLogo, also termed Berkeley Logo, is a programming language,
                a dialect of Logo, which derived from Lisp.
            </source>
        </language>
    </language>
    <language name="lpc">
        <source href="https://en.wikipedia.org/wiki/LPMud">
            LPC: C-based object-oriented programming language.
        </source>
    </language>
    <language name="lrc">
        <source href="https://en.wikipedia.org/wiki/LRC_(file_format)">
            LRC (short for lyrics) is a computer file format that synchronizes song lyrics with an audio file.
        </source>
    </language>
    <language name="ltl">
        <source href="https://en.wikipedia.org/wiki/Linear_temporal_logic">
            LTL is a modal temporal logic with modalities referring to time.
        </source>
    </language>
    <language name="lua">
        <source href="https://en.wikipedia.org/wiki/Lua_(programming_language)">
            Lua is a lightweight, high-level, multi-paradigm programming language designed mainly for embedded use in
            applications.
        </source>
    </language>
    <language name="lucene">
        <source href="https://lucene.apache.org/core/2_9_4/queryparsersyntax.html">
            Apache Lucene - Query Parser Syntax.
        </source>
    </language>
    <language name="markdown">
        <source href="https://en.wikipedia.org/wiki/Markdown">
            Markdown is a lightweight markup language for creating formatted text using a plain-text editor.
        </source>
    </language>
    <language name="matlab">
        <source href="https://en.wikipedia.org/wiki/MATLAB">
            MATLAB is a proprietary multi-paradigm
            programming language and numeric computing environment developed by MathWorks.
        </source>
    </language>
    <language name="mckeeman-form">
        <source href="https://www.crockford.com/mckeeman.html">
            McKeeman Form is a notation for expressing grammars. It was proposed by Bill McKeeman of Dartmouth College.
            It is a simplified Backus-Naur Form with significant whitespace and minimal use of metacharacters.
        </source>
    </language>
    <language name="mdx">
        <source href="https://en.wikipedia.org/wiki/MultiDimensional_eXpressions">
            The MultiDimensional eXpressions (MDX) language provides a specialized syntax
            for querying and manipulating the multidimensional data stored in OLAP cubes
        </source>
    </language>
    <language name="memcached_protocol">
        <source href="https://en.wikipedia.org/wiki/MemcacheDB">
            Memcached wire protocol.
        </source>
    </language>
    <language name="metamath">
        <source href="https://en.wikipedia.org/wiki/Metamath">
            Metamath is a formal language and an associated
            computer program (a proof assistant) for archiving and verifying mathematical proofs.
        </source>
    </language>
    <language name="metric">
        <source href="https://en.wikipedia.org/wiki/Metric_system">
            The metric system is a decimal-based system of measurement.
        </source>
    </language>
    <language name="microc">
        <source href="http://www.ctoassembly.com/microc.html">
            micro-C is simplified C language, stripped of certain functionalities that it contains.
        </source>
    </language>
    <language name="modelica">
        <source href="https://en.wikipedia.org/wiki/Modelica">
            Modelica is an object-oriented, declarative, multi-domain modeling language for component-oriented modeling
            of complex systems, e.g., systems containing
            mechanical, electrical, electronic, hydraulic, thermal, control, electric power or process-oriented
            subcomponents.
        </source>
    </language>
    <language name="modula2pim4">
        <source href="https://en.wikipedia.org/wiki/Modula-2">
            Modula-2 is a structured, procedural programming language developed between 1977 and 1985/8 by Niklaus Wirth
            at ETH Zurich.
        </source>
    </language>
    <language name="molecule">
        <source href="https://en.wikipedia.org/wiki/Chemical_formula#Molecular_formula">
            chemical molecules in Hill format.
        </source>
    </language>
    <language name="moo">
        <source href="https://en.wikipedia.org/wiki/MOO">
            A MOO is a text-based online virtual reality system
            to which multiple users (players) are connected at the same time.
        </source>
    </language>
    <language name="morsecode">
        <source href="https://en.wikipedia.org/wiki/Morse_code">
            Morse code is a telecommunications method which encodes text characters as
            standardized sequences of two different signal durations, called dots and dashes, or dits and dahs.
        </source>
    </language>
    <language name="mps">
        <source href="https://en.wikipedia.org/wiki/MPS_(format)">
            MPS (Mathematical Programming System) is a file format for presenting
            and archiving linear programming (LP) and mixed integer programming problems.
        </source>
    </language>
    <language name="muddb">
        <source href="https://en.wikipedia.org/wiki/Multi-user_dungeon">
            A multi-user dungeon, also known as a multi-user dimension or multi-user domain
        </source>
    </language>
    <language name="mumath">
        <source href="https://en.wikipedia.org/wiki/MuMATH">
            muMATH is a computer algebra system (CAS).
        </source>
    </language>
    <language name="mumps">
        <source href="https://en.wikipedia.org/wiki/MUMPS">
            MUMPS ("Massachusetts General Hospital Utility Multi-Programming System")
        </source>
    </language>
    <language name="muparser">
        <source href="https://beltoforion.de/en/muparser/">
            Many applications require the parsing of mathematical expressions.
            The main objective muparser is to provide a fast, easy and secure way of doing this.
        </source>
    </language>
    <language name="newick">
        <source href="https://en.wikipedia.org/wiki/Newick_format">
            In mathematics and phylogenetics, Newick tree format (or Newick notation or New Hampshire tree format)
            is a way of representing graph-theoretical trees with edge lengths using parentheses and commas.
        </source>
    </language>
    <language name="oberon">
        <source href="https://en.wikipedia.org/wiki/Oberon_(programming_language)">
            Oberon is a general-purpose programming language first published in 1987 by Niklaus Wirth and the latest
            member of the
            Wirthian family of ALGOL-like languages (Euler, ALGOL W, Pascal, Modula, and Modula-2).
        </source>
    </language>
    <language name="objc">
        <source href="https://en.wikipedia.org/wiki/Objective-C">
            Objective-C is a high-level general-purpose, object-oriented programming language
            that adds Smalltalk-style messaging to the C[3] programming language.
        </source>
    </language>
    <language name="ocl">
        <source href="https://en.wikipedia.org/wiki/Object_Constraint_Language">
            The Object Constraint Language (OCL) is a declarative language describing rules applying to
            Unified Modeling Language (UML) models developed at IBM and is now part of the UML standard.
        </source>
    </language>
    <language name="oncrpc">
        <source href="https://en.wikipedia.org/wiki/Sun_RPC">
            Open Network Computing (ONC) Remote Procedure Call (RPC), commonly known as Sun RPC is a remote procedure
            call system.
        </source>
    </language>
    <language name="orwell">
        <source href="https://en.wikipedia.org/wiki/Orwell_(programming_language)">
            Orwell is a small, lazy-evaluation functional programming language.
        </source>
    </language>
    <language name="p">
        <source href="https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2">
            P′′ (P double prime[1]) is a primitive computer programming language.
        </source>
    </language>
    <language name="parkingsign">
        <source href="https://github.com/antlr/grammars-v4/blob/master/parkingsign/README.md">
            Los Angeles parking sign images and grammar to parse them.
        </source>
    </language>
    <language name="pascal">
        <source href="https://en.wikipedia.org/wiki/Pascal_(programming_language)">
            Pascal is an imperative and procedural programming language.
        </source>
    </language>
    <language name="pbm">
        <source href="https://en.wikipedia.org/wiki/Netpbm">
            portable bitmap format (PBM).
        </source>
    </language>
    <language name="pcre">
        <source href="https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions">
            Perl Compatible Regular Expressions (PCRE).
        </source>
    </language>
    <language name="pddl">
        <source href="https://en.wikipedia.org/wiki/Planning_Domain_Definition_Language">
            Planning Domain Definition Language (PDDL).
        </source>
    </language>
    <language name="pdn">
        <source href="https://en.wikipedia.org/wiki/Portable_Draughts_Notation">
            Portable Draughts Notation (.PDN) is the standard computer-processable format for recording draughts games.
        </source>
    </language>
    <language name="pegen">
        <source href="https://github.com/we-like-parsers/pegen">
            Pegen is the parser generator used in CPython to produce the parser used by the interpreter. It allows to
            produce PEG parsers from a description of a formal Grammar.
        </source>
    </language>
    <language name="peoplecode">
        <source href="https://docs.oracle.com/cd/F28299_01/pt857pbr3/eng/pt/tpcd/concept_PeopleCodeOverview-074b56.html?pli=ul_d40e26_tpcd">
            PeopleCode is the proprietary language used by PeopleSoft applications.
        </source>
    </language>
    <language name="pest">
        <source href="https://docs.rs/pest/latest/pest/">
            pest is a general purpose parser written in Rust with a focus on accessibility, correctness, and
            performance.
        </source>
    </language>
    <language name="pf">
        <source href="https://man.openbsd.org/pf.conf">
            packet filter configuration file.
        </source>
    </language>
    <language name="pgn">
        <source href="https://en.wikipedia.org/wiki/Portable_Game_Notation">
            Portable Game Notation (PGN) is a standard plain text format for recording chess games.
        </source>
    </language>
    <language name="php">
        <source href="https://en.wikipedia.org/wiki/PHP">
            PHP is a general-purpose scripting language geared towards web development.
        </source>
    </language>
    <language name="pii">
        <source href="https://en.wikipedia.org/wiki/Publisher_Item_Identifier">
            The Publisher Item Identifier (PII) is a unique identifier used by a number of
            scientific journal publishers to identify documents.
        </source>
    </language>
    <language name="pike">
        <source href="https://pike.lysator.liu.se/docs/tut/">
            Pike is an interpreted, object-oriented programming language.
            It looks a bit like C and C++, but it is much easier to learn and use
        </source>
    </language>
    <language name="pl0">
        <source href="https://en.wikipedia.org/wiki/PL/0">
            PL/0 is a programming language, intended as an educational programming language, that is similar to but much
            simpler than Pascal.
        </source>
    </language>
    <language name="plucid">
        <source href="https://en.wikipedia.org/wiki/Lucid_(programming_language)">
            Lucid is a dataflow programming language designed to experiment with non-von Neumann programming models.
        </source>
    </language>
    <language name="ply">
        <source href="https://en.wikipedia.org/wiki/PLY_(file_format)">
            PLY is a computer file format known as the Polygon File Format or the Stanford Triangle Format.
        </source>
    </language>
    <language name="pmmn">
        <source href="https://esolangs.org/wiki/Portable_Minsky_Machine_Notation">
            Portable Minsky Machine Notation (PMMN).
        </source>
    </language>
    <language name="postalcode">
        <source href="https://en.wikipedia.org/wiki/Postal_codes_in_Canada">
            Canadian postal code.
        </source>
    </language>
    <language name="powerbuilder">
        <source href="https://en.wikipedia.org/wiki/PowerBuilder">
            Powerbuilder language.
        </source>
    </language>
    <language name="powerbuilderdw">
        <source href="https://en.wikipedia.org/wiki/PowerBuilder">
            Powerbuilder Datawindow (*.srd) files.
        </source>
    </language>
    <language name="powerquery">
        <source href="https://en.wikipedia.org/wiki/Power_Query">
            Power Query is an ETL tool created by Microsoft for data extraction, loading and transformation.
        </source>
    </language>
    <language name="prolog">
        <source href="https://en.wikipedia.org/wiki/Prolog">
            Prolog is a logic programming language that has its origins in
            artificial intelligence, automated theorem proving and computational linguistics.
        </source>
    </language>
    <language name="promql">
        <source href="https://prometheus.io/docs/prometheus/latest/querying/basics/">
            Prometheus Query Language.
        </source>
    </language>
    <language name="propcalc">
        <source href="https://en.wikipedia.org/wiki/Propositional_calculus">
            propositional calculus is a branch of logic. Deals with propositions, which can be true or false.
        </source>
    </language>
    <language name="properties">
        <source href="https://en.wikipedia.org/wiki/.properties">
            .properties is a file extension for files mainly used in
            Java-related technologies to store the configurable parameters of an application.
        </source>
    </language>
    <language name="protobuf2">
        <source href="https://developers.google.com/protocol-buffers/docs/reference/proto2-spec">
            Protocol Buffers Version 2 Language Specification.
        </source>
    </language>
    <language name="protobuf3">
        <source href="https://protobuf.dev/reference/protobuf/proto3-spec/">
            Protocol Buffers Version 3 Language Specification.
        </source>
    </language>
    <language name="prov-n">
        <source href="https://www.w3.org/TR/prov-n/">
            Provenance is information about entities, activities, and people involved in producing a piece
            of data or thing, which can be used to form assessments about its quality, reliability or trustworthiness.
            PROV-DM is the conceptual data model that forms a basis for the W3C provenance (PROV) family of
            specifications.
            Aimed at human consumption, PROV-N allows serializations of PROV instances to be created in a compact
            manner.
        </source>
    </language>
    <language name="python">
        <source href="https://github.com/antlr/grammars-v4/tree/master/python/python">
            Python 2 and 3 universal grammar.
        </source>
        <language name="python3">
            <source href="https://en.wikipedia.org/wiki/Python_(programming_language)">
                Python is a high-level, general-purpose programming language.
                Its design philosophy emphasizes code readability with the use of significant indentation.
            </source>
        </language>
        <language name="python2">
            <source href="https://en.wikipedia.org/wiki/Python_(programming_language)#cite_note-36">
                Discontinued
            </source>
        </language>
    </language>
    <language name="qif">
        <source href="https://en.wikipedia.org/wiki/Quicken_Interchange_Format">
            Although still widely used, QIF is a format older than Open Financial Exchange (OFX).
        </source>
    </language>
    <language name="quakemap">
        <source href="https://en.wikipedia.org/wiki/Quake_(video_game)">
            Quake map file format.
        </source>
    </language>
    <language name="r">
        <source href="https://en.wikipedia.org/wiki/R_(programming_language)">
            R is a programming language for statistical computing and data visualization.
        </source>
    </language>
    <language name="racket-bsl">
        <source href="https://docs.racket-lang.org/htdp-langs/beginner.html">
            Racket: Beginning Student level.
        </source>
    </language>
    <language name="racket-isl">
        <source href="https://docs.racket-lang.org/htdp-langs/intermediate-lam.html">
            Racket: Intermediate Student with Lambda.
        </source>
    </language>
    <language name="rcs">
        <source href="https://en.wikipedia.org/wiki/Revision_Control_System">
            Revision Control System (RCS) meta data.
        </source>
    </language>
    <language name="recfile">
        <source href="https://en.wikipedia.org/wiki/Recfiles">
            recfiles is a file format for human-editable, plain text databases.
        </source>
    </language>
    <language name="redcode">
        <source href="https://en.wikipedia.org/wiki/Core_War">
            Core War is a 1984 programming game created by D. G. Jones and A. K. Dewdney in which two or more battle
            programs
            (called "warriors") compete for control of a virtual computer.
            These battle programs are written in an abstract assembly language called Redcode.
        </source>
    </language>
    <language name="refal">
        <source href="https://en.wikipedia.org/wiki/Refal">
            Refal ("Recursive functions algorithmic language") "is a functional programming language oriented toward
            symbolic computations",
            including "string processing, language translation, [and] artificial intelligence".
        </source>
    </language>
    <language name="rego">
        <source href="https://www.openpolicyagent.org/docs/latest/policy-language/">
            Use Rego for defining policy that is easy to read and write.
            Rego is declarative so policy authors can focus on what queries should return rather than how queries should
            be executed.
            These queries are simpler and more concise than the equivalent in an imperative language.
        </source>
    </language>
    <language name="restructuredtext">
        <source href="https://en.wikipedia.org/wiki/ReStructuredText">
            reStructuredText (RST, ReST, or reST) is a file format for textual data
            used primarily in the Python programming language community for technical documentation.
        </source>
    </language>
    <language name="rexx">
        <source href="https://en.wikipedia.org/wiki/Rexx">
            Rexx (Restructured Extended Executor) is a programming language that can be interpreted or compiled.
            It is a structured, high-level programming language designed for ease of learning and reading.
        </source>
    </language>
    <language name="rfc1035">
        <source href="https://datatracker.ietf.org/doc/html/rfc1035">
            DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION
        </source>
    </language>
    <language name="rfc1960">
        <source href="https://www.rfc-editor.org/rfc/rfc1960.txt">
            A String Representation of LDAP Search Filters.
        </source>
    </language>
    <language name="rfc3080">
        <source href="https://datatracker.ietf.org/doc/html/rfc3080">
            The Blocks Extensible Exchange Protocol Core.
        </source>
    </language>
    <language name="rfc822">
        <source href="https://datatracker.ietf.org/doc/html/rfc822">
            Standard for ARPA Internet Text Messages.
        </source>
        <language name="rfc822-datetime">
            <source href="https://datatracker.ietf.org/doc/html/rfc822#section-5">
                DATE AND TIME SPECIFICATION.
            </source>
        </language>
        <language name="rfc822-emailaddress">
            <source href="https://datatracker.ietf.org/doc/html/rfc822#section-3.1.4">
                Address field, email address format.
            </source>
        </language>
    </language>
    <language name="robotwars">
        <source href="https://en.wikipedia.org/wiki/RobotWar">
            RobotWar is a programming game developed for the PLATO computer system at Indiana University in the 1970s by
            Silas Warner.
            The robots' language is similar to BASIC. There are 34 registers that can be used as variables or for the
            robots' I/O functions.
        </source>
    </language>
    <language name="romannumerals">
        <source href="https://en.wikipedia.org/wiki/Roman_numerals">
            Roman numerals.
        </source>
    </language>
    <language name="ron">
        <source href="https://github.com/ron-rs/ron">
            Rusty Object Notation, similar tot JSON.
        </source>
    </language>
    <language name="rpn">
        <source href="https://en.wikipedia.org/wiki/Reverse_Polish_notation">
            Reverse Polish notation.
        </source>
    </language>
    <language name="ruby">
        <source href="https://en.wikipedia.org/wiki/Ruby_(programming_language)">
            Ruby is an interpreted, high-level, general-purpose programming language.
        </source>
    </language>
    <language name="ruleworks">
        <source href="https://github.com/antlr/grammars-v4/tree/master/ruleworks">
            This is the grammar for RuleWorks, which was intended as a follow on to OPS5. OPS5 was originally developed
            at Carnegie Melon University and then adopted by Digital Equipment Corporation (DEC).
            The source code contains copyrights from DEC.
        </source>
    </language>
    <language name="rust">
        <source href="https://en.wikipedia.org/wiki/Rust_(programming_language)">
            Rust is a general-purpose programming language emphasizing performance, type safety, and concurrency.
            It enforces memory safety, meaning that all references point to valid memory, without a garbage collector.
        </source>
    </language>
    <language name="scala">
        <source href="https://en.wikipedia.org/wiki/Scala_(programming_language)">
            Scala is a strong statically typed high-level general-purpose
            programming language that supports both object-oriented programming and functional programming.
        </source>
    </language>
    <language name="scotty">
        <source href="https://esolangs.org/wiki/Scotty">
            Scotty is an educational esoteric language created in the Spring of 2016 for a course on programming
            languages.
            It is an imperative language with a syntax that is incredibly easy to tokenize,
            making it relatively easy to implement language features without needing to perform any lexical analysis of
            the input.
        </source>
    </language>
    <language name="scss">
        <source href="https://en.wikipedia.org/wiki/Sass_(style_sheet_language)">
            The newer syntax, SCSS (Sassy CSS), uses block formatting like that of CSS.
        </source>
    </language>
    <language name="sdl">
        <source href="https://wiki.vmssoftware.com/Structure_Definition_Language">
            Structure Definition Language (SDL) is a language used to write source statements that describe data
            structures
            and that can be translated to source statements in other languages. OpenVMS contains an SDL translator
            program.
        </source>
    </language>
    <language name="semver">
        <source href="https://en.wikipedia.org/wiki/Software_versioning#Semantic_versioning">
            Semantic versioning (aka SemVer)[1] is a widely-adopted version scheme that encodes a version by a
            three-part version number (Major.Minor.Patch),
            an optional pre-release tag, and an optional build meta tag.
        </source>
    </language>
    <language name="sexpression">
        <source href="https://en.wikipedia.org/wiki/S-expression">
            In computer programming, an S-expression (or symbolic expression, abbreviated as sexpr or sexp)
            is an expression in a like-named notation for nested list (tree-structured) data.
        </source>
    </language>
    <language name="sgf">
        <source href="https://en.wikipedia.org/wiki/Smart_Game_Format">
            The Smart Game Format (SGF) is a file format used for storing records of board games.
        </source>
    </language>
    <language name="sharc">
        <source href="https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer">
            assembly language syntax.
        </source>
    </language>
    <language name="sici">
        <source href="https://en.wikipedia.org/wiki/Serial_Item_and_Contribution_Identifier">
            The Serial Item and Contribution Identifier (SICI) was a code (ANSI/NISO standard Z39.56-1996 [R2002]) used
            to uniquely identify specific volumes,
            articles or other identifiable parts of a serial.
            It was "intended primarily for use by those members of the bibliographic community
            involved in the use or management of serial titles and their contributions".
        </source>
    </language>
    <language name="sieve">
        <source href="https://en.wikipedia.org/wiki/Sieve_(mail_filtering_language)">
            Sieve is a programming language that can be used for email filtering.
        </source>
    </language>
    <language name="smalltalk">
        <source href="https://en.wikipedia.org/wiki/Smalltalk">
            Smalltalk is a purely object oriented programming language (OOP) that was originally created in the 1970s
            for educational use,
            specifically for constructionist learning, but later found use in business.
        </source>
    </language>
    <language name="smiles">
        <source href="https://en.wikipedia.org/wiki/Simplified_Molecular_Input_Line_Entry_System">
            The Simplified Molecular Input Line Entry System (SMILES) is a specification in the form of a
            line notation for describing the structure of chemical species using short ASCII strings.
        </source>
    </language>
    <language name="smtlibv2">
        <source href="https://en.wikipedia.org/wiki/Satisfiability_modulo_theories">
            In computer science and mathematical logic, satisfiability modulo theories (SMT)
            is the problem of determining whether a mathematical formula is satisfiable.
            ... smtlibv2 is a (LISP like) common interface format.
        </source>
    </language>
    <language name="snobol">
        <source href="https://en.wikipedia.org/wiki/SNOBOL">
            SNOBOL ("StriNg Oriented and symBOlic Language").
        </source>
    </language>
    <language name="solidity">
        <source href="https://en.wikipedia.org/wiki/Solidity">
            Solidity is a programming language for implementing smart contracts on various blockchain platforms,
            most notably, Ethereum.
        </source>
    </language>
    <language name="sparql">
        <source href="https://en.wikipedia.org/wiki/SPARQL">
            SPARQL (pronounced "sparkle", a recursive acronym for SPARQL Protocol and RDF Query Language) is an RDF
            query language.
        </source>
    </language>
    <language name="spass">
        <source href="https://en.wikipedia.org/wiki/SPASS">
            SPASS is an automated theorem prover for first-order logic with equality
            developed at the Max Planck Institute for Computer Science and using the superposition calculus.
        </source>
    </language>
    <language name="spl">
        <source href="https://en.wikipedia.org/wiki/Splunk">
            Splunk query language.
        </source>
    </language>
    <language name="sql">
        <source href="https://en.wikipedia.org/wiki/SQL">
            Structured Query Language (SQL).
        </source>
        <language name="athena">
            <source href="https://docs.aws.amazon.com/athena/latest/ug/ddl-sql-reference.html">
                SQL reference for Athena.
            </source>
        </language>
        <language name="derby">
            <source href="https://db.apache.org/derby/docs/10.16/ref/index.html">
                SQL reference for Derby.
            </source>
        </language>
        <language name="drill">
            <source href="https://drill.apache.org/docs/sql-reference/">
                SQL reference for Drill.
            </source>
        </language>
        <language name="hive">
            <source href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual">
                SQL reference for Hive.
            </source>
        </language>
        <language name="informix-sql">
            <source href="https://www.ibm.com/docs/en/informix-servers/14.10?topic=programming-guide-sql-syntax">
                SQL reference for Informix.
            </source>
        </language>
        <language name="mariadb">
            <source href="https://mariadb.org/documentation/">
                SQL reference for MariaDB.
            </source>
        </language>
        <language name="mysql">
            <source href="https://nl.wikipedia.org/wiki/MySQL">
                SQL reference for MySQL.
            </source>
        </language>
        <language name="phoenix">
            <source href="https://phoenix.apache.org/language/index.html">
                SQL reference for Apache Phoenix.
            </source>
        </language>
        <language name="plsql">
            <source href="https://docs.oracle.com/en/database/oracle/oracle-database/23/lnpls/index.html">
                SQL reference for Oracle PlSql.
            </source>
        </language>
        <language name="postgresql">
            <source href="https://en.wikipedia.org/wiki/PostgreSQL">
                SQL reference for PostgreSQL.
            </source>
        </language>
        <language name="snowflake">
            <source href="https://docs.snowflake.com/en/sql-reference-commands">
                SQL reference for Snowflake.
            </source>
        </language>
        <language name="sqlite">
            <source href="https://www.sqlite.org/lang.html">
                SQL reference for SqlLite.
            </source>
        </language>
        <language name="trino">
            <source href="https://trino.io/docs/current/sql.html">
                SQL reference for Trino.
            </source>
        </language>
        <language name="tsql">
            <source href="http://infocenter.sybase.com/help/topic/com.sybase.dc36272_1251/pdf/commands.pdf">
                SQL reference for T-Sql.
            </source>
        </language>
    </language>
    <language name="stacktrace">
        <source href="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html">
            Grammar of a java stack trace.
        </source>
    </language>
    <language name="star">
        <source href="https://en.wikipedia.org/wiki/Self-defining_Text_Archive_and_Retrieval">
            The Self-Defining Text Archive and Retrieval (STAR) File, or simply the STAR File,
            is a text-based file format for storing structured data.
        </source>
    </language>
    <language name="stellaris">
        <source href="https://en.wikipedia.org/wiki/Stellaris_(video_game)">
            Grammar for Stellaris files.
        </source>
    </language>
    <language name="stl">
        <source href="https://en.wikipedia.org/wiki/STL_(file_format)">
            STL is a file format native to the stereolithography CAD software created by 3D Systems.
        </source>
    </language>
    <language name="stringtemplate">
        <source href="https://www.stringtemplate.org/">
            StringTemplate is a java template engine (with ports for C#, Objective-C, JavaScript, Scala)
            for generating source code, web pages, emails, or any other formatted text output.
        </source>
    </language>
    <language name="suokif">
        <source href="https://en.wikipedia.org/wiki/Knowledge_Interchange_Format">
            Knowledge Interchange Format (KIF) is a computer language designed to enable systems to share
            and re-use information from knowledge-based systems.
        </source>
    </language>
    <language name="swift-fin">
        <source href="https://en.wikipedia.org/wiki/SWIFT_message_types">
            Schema used to send messages to financial institutions on the SWIFT network.
        </source>
    </language>
    <language name="swift">
        <source href="https://en.wikipedia.org/wiki/Swift_(programming_language)">
            Swift is a high-level general-purpose, multi-paradigm, compiled programming language.
        </source>
        <!--
        todo
        <language name="swift2">
            <source href="">
            </source>
        </language>
        <language name="swift3">
            <source href="">
            </source>
        </language>
        <language name="swift5">
            <source href="">
            </source>
        </language>
        -->
    </language>
    <language name="szf">
        <source href="https://en.wikipedia.org/wiki/SFZ_(file_format)">
            SFZ is a plain text file format that stores instrument data for software synthesizers.
        </source>
    </language>
    <language name="tcpheader">
        <source href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">
            Transmission Control Protocol header format.
        </source>
    </language>
    <language name="teal">
        <source href="https://developer.algorand.org/docs/get-details/dapps/avm/teal/">
            Typed dialect of Lua language.
        </source>
    </language>
    <language name="telephone">
        <source href="https://github.com/antlr/grammars-v4/tree/master/telephone">
            Grammar for Telephone numbers.
        </source>
    </language>
    <language name="terraform">
        <source href="https://en.wikipedia.org/wiki/Terraform_(software)">
            Terraform Grammar.
        </source>
    </language>
    <language name="thrift">
        <source href="https://en.wikipedia.org/wiki/Protocol_Buffers">
            Interface description language.
        </source>
    </language>
    <language name="tiny">
        <source href="https://a7medayman6.github.io/Tiny-Compiler/">
            Grammar of TINY Programming Language.
        </source>
    </language>
    <language name="tinybasic">
        <source href="https://en.wikipedia.org/wiki/Tiny_BASIC">
            Tiny BASIC is a family of dialects of the BASIC programming language that can fit into 4 or fewer KBs of
            memory.
        </source>
    </language>
    <language name="tinyc">
        <source href="https://en.wikipedia.org/wiki/Tiny_C_Compiler">
            C designed to work for slow computers with little disk space.
        </source>
    </language>
    <language name="tinymud">
        <source href="https://en.wikipedia.org/wiki/Multi-user_dungeon#TinyMUD">
            programming language for Tiny variant of Multi-user dungeon.
        </source>
    </language>
    <language name="tinyos_nesc">
        <source href="https://en.wikipedia.org/wiki/NesC">
            nesC (pronounced "NES-see") is a component-based, event-driven programming language used to build
            applications for the TinyOS platform.
        </source>
    </language>
    <language name="tl">
        <source href="https://en.wikipedia.org/wiki/Temporal_logic#Prior's_tense_logic_(TL)">
            The sentential tense logic introduced in Time and Modality has four (non-truth-functional) modal operators
            (in addition to all usual truth-functional operators in first-order propositional logic).
        </source>
    </language>
    <language name="tnsnames">
        <source href="https://docs.oracle.com/database/121/NETRF/tnsnames.htm">
            Syntax of Oracle tnsnames file.
        </source>
    </language>
    <language name="tnt">
        <source href="https://en.wikipedia.org/wiki/Typographical_Number_Theory">
            Typographical Number Theory (TNT) is a formal axiomatic system describing
            the natural numbers that appears in Douglas Hofstadter's book Gödel, Escher, Bach.
        </source>
    </language>
    <language name="toml">
        <source href="https://en.wikipedia.org/wiki/TOML">
            Tom's Obvious, Minimal Language (TOML, originally Tom's Own Markup Language) is a file format for
            configuration files.
        </source>
    </language>
    <language name="trac">
        <source href="https://en.wikipedia.org/wiki/TRAC_(programming_language)">
            Grammar for TRAC (for Text Reckoning And Compiling) programming language.
        </source>
    </language>
    <language name="tsv">
        <source href="https://en.wikipedia.org/wiki/Tab-separated_values">
            Tab-separated values (TSV) is a simple, text-based file format for storing tabular data.
        </source>
    </language>
    <language name="ttm">
        <source href="https://en.wikipedia.org/wiki/TTM_(programming_language)">
            TTM is a string oriented, general purpose macro processing programming language.
        </source>
    </language>
    <language name="turing">
        <source href="https://en.wikipedia.org/wiki/Turing_(programming_language)">
            Turing is a high-level, general purpose programming language.
        </source>
    </language>
    <language name="turtle-doc">
        <source href="https://en.wikipedia.org/wiki/Turtle_(syntax)">
            Variant 1: Terse RDF Triple Language (Turtle) is a syntax and file format for expressing data in the
            Resource Description Framework (RDF) data model.
        </source>
    </language>
    <language name="turtle">
        <source href="https://en.wikipedia.org/wiki/Turtle_(syntax)">
            Variant 2: Terse RDF Triple Language (Turtle) is a syntax and file format for expressing data in the
            Resource Description Framework (RDF) data model.
        </source>
    </language>
    <language name="unicode">
        <source href="https://github.com/antlr/grammars-v4/tree/master/unicode">
            Unicode encoding grammar.
        </source>
    </language>
    <language name="unreal_angelscript">
        <source href="https://angelscript.hazelight.se/">
            Unreal Engine Angelscript.
        </source>
    </language>
    <language name="upnp">
        <source href="https://github.com/antlr/grammars-v4/tree/master/upnp">
            UPNP Search Grammar.
        </source>
    </language>
    <language name="url">
        <source href="https://en.wikipedia.org/wiki/URL">
            Grammar for uniform resource locators (URL).
        </source>
    </language>
    <language name="useragent">
        <source href="https://deviceatlas.com/blog/list-of-user-agent-strings">
            The User-Agent (UA) string is contained in the HTTP headers and is intended to identify devices requesting
            online content.
        </source>
    </language>
    <language name="v">
        <source href="https://en.wikipedia.org/wiki/V_(programming_language)">
            V, also known as vlang, is a statically typed, compiled programming language inspired on go.
        </source>
    </language>
    <language name="vaxscan">
        <source href="https://github.com/antlr/grammars-v4/tree/master/vaxscan">
            VAX SCAN is a block-structured programming language in the VAX/VMS environment that is designed to build
            tools to manipulate text strings and text files.
            The primary applications for VAX SCAN are filters, translators, extractors/analyzers, and preprocessors.
        </source>
    </language>
    <language name="vb6">
        <source href="https://nl.wikipedia.org/wiki/Visual_Basic">
            Version 6 of Microsoft Visual Basic.
        </source>
    </language>
    <language name="vba">
        <source href="https://en.wikipedia.org/wiki/Visual_Basic_for_Applications">
            Visual Basic for Applications (VBA).
        </source>
    </language>
    <language name="velocity">
        <source href="https://en.wikipedia.org/wiki/Apache_Velocity">
            Apache Velocity template syntax.
        </source>
    </language>
    <language name="verilog">
        <source href="https://en.wikipedia.org/wiki/Verilog">
            Verilog, standardized as IEEE 1364, is a hardware description language (HDL) used to model electronic
            systems.
        </source>
        <language name="systemverilog">
            <source href="https://github.com/antlr/grammars-v4/blob/master/verilog/systemverilog/README.md">
                SystemVerilog (IEEE Std 1800-2017).
            </source>
        </language>
        <language name="verilog">
            <source href="https://github.com/antlr/grammars-v4/blob/master/verilog/verilog/README.md">
                Verilog (IEEE Std 1364-2005).
            </source>
        </language>
    </language>
    <language name="vhdl">
        <source href="https://en.wikipedia.org/wiki/VHDL">
            VHDL (VHSIC Hardware Description Language) is a hardware description language that can model the behavior and
            structure of digital systems at multiple levels of abstraction,
            ranging from the system level down to that of logic gates, for design entry, documentation, and verification
            purposes.
        </source>
    </language>
    <language name="vmf">
        <source href="https://developer.valvesoftware.com/wiki/KeyValues#About_KeyValues_Text_File_Format">
            Valve Map Files (Half Life Game?).
        </source>
    </language>
    <language name="wat">
        <source href="https://webassembly.github.io/spec/core/text/index.html">
            Wat (textual WebAssembly) format.
        </source>
    </language>
    <language name="wavefront">
        <source href="https://en.wikipedia.org/wiki/Wavefront_.obj_file">
            grammar for Wavefront OBJ files.
        </source>
    </language>
    <language name="webidl">
        <source href="https://en.wikipedia.org/wiki/Web_IDL">
            Web IDL is an interface description language (IDL) format for describing APIs
            (application programming interfaces) that are intended to be implemented in web browsers.
        </source>
    </language>
    <language name="wkt-crs-v1">
        <source href="https://en.wikipedia.org/wiki/Well-known_text_representation_of_coordinate_reference_systems">
            Well-known text representation of coordinate reference systems (WKT or WKT-CRS) is a text markup language
            for
            representing spatial reference systems and transformations between spatial reference systems.
        </source>
    </language>
    <language name="wkt">
        <source href="https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry">
            Well-known text (WKT) is a text markup language for representing vector geometry objects.
        </source>
    </language>
    <language name="wln">
        <source href="https://en.wikipedia.org/wiki/Wiswesser_line_notation">
            Wiswesser line notation (WLN), invented by William J. Wiswesser in 1949,
            was the first line notation capable of precisely describing complex molecules.
        </source>
    </language>
    <language name="wren">
        <source href="https://wren.io/">
            Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.
        </source>
    </language>
    <language name="xml">
        <source href="https://en.wikipedia.org/wiki/XML">
            Extensible Markup Language (XML) is a markup language and file format for storing, transmitting, and
            reconstructing arbitrary data.
        </source>
    </language>
    <language name="xpath">
        <source href="https://en.wikipedia.org/wiki/XPath">
            XPath (XML Path Language) is an expression language designed to support the query or transformation of XML
            documents.
        </source>
        <language name="xpath1">
            <source href="https://www.w3.org/TR/1999/REC-xpath-19991116/">
                XPath 1.0 Spec.
            </source>
        </language>
        <language name="xpath20">
            <source href="https://www.w3.org/TR/2010/REC-xpath20-20101214/xpath20-diff-from-REC20070123.html">
                XPath 2.0.
            </source>
        </language>
        <language name="xpath31">
            <source href="https://www.w3.org/TR/xpath-31/">
                XPath 3.1 Spec.
            </source>
        </language>
    </language>
    <language name="xsd-regex">
        <source href="https://www.w3.org/XML/2008/03/xsdl-regex/re.xml">
            Regular expressions in XSD 1.0 and 1.1.
        </source>
    </language>
    <language name="xyz">
        <source href="https://en.wikipedia.org/wiki/XYZ_file_format">
            The XYZ file format is a chemical file format.
        </source>
    </language>
    <language name="yaml">
        <source href="https://en.wikipedia.org/wiki/YAML">
            YAML is a human-readable data serialization language.
        </source>
    </language>
    <language name="yara">
        <source href="https://yara.readthedocs.io/en/stable/">
            YARA is a tool aimed at (but not limited to) helping malware researchers to identify and classify malware
            samples.
        </source>
    </language>
    <language name="z">
        <source href="https://en.wikipedia.org/wiki/Z_notation">
            The Z notation is a formal specification language used for describing and modelling computing systems.
        </source>
    </language>
</languages>
